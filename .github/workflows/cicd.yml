permissions:
    contents: write

on:
    push:
        branches:
            - main
            #- next
    pull_request:

concurrency:
    group: ${{ github.workflow }}

name: ci/cd
jobs:
    cicd:
        runs-on: ${{ matrix.platform }}
        name: ${{ matrix.label }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: "macos-latest" # for Arm based macs (M1 and above).
                      args: "--target aarch64-apple-darwin"
                      label: macos (silicon)
                    - platform: "macos-latest" # for Intel based macs.
                      args: "--target x86_64-apple-darwin"
                      label: macos (intel)
                    - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
                      args: ""
                      label: ubuntu
                    - platform: "windows-latest"
                      args: ""
                      label: windows
        steps:
            - name: checkout codebase
              uses: actions/checkout@v4
              with:
                  submodules: true

            ### Install languages ###
            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "yarn"

            - name: setup rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: llvm-tools-preview

            ### Install language dependencies ###
            - name: install yarn
              run: npm install --global yarn

            - name: install script dependencies
              run: yarn install --frozen-lockfile

            - name: install rust development tools
              uses: taiki-e/install-action@cargo-llvm-cov

            - name: install rust dependencies
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: install macos intel target
              if: matrix.platform == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin'
              run: |
                  rustup target add x86_64-apple-darwin

            ### Apply cache ###
            - name: generate Cargo.lock
              run: cargo generate-lockfile
              working-directory: ./src/core

            - name: cache rust dependencies
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: "./src/core -> target"

            - name: configure rust compiler cache
              run: |
                  echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
                  echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV

            - name: cache rust compiler
              uses: mozilla-actions/sccache-action@v0.0.5

            ### Tag new version ###
            - name: fetch all tags
              run: git fetch --tags --unshallow --force

            - name: tag new version
              run: yarn tag:version

            ### Build and test ###
            - name: install node dependencies
              run: yarn install --frozen-lockfile
              working-directory: ./src/ui

            - name: build ui
              run: yarn run build
              working-directory: ./src/ui

            - name: test core
              run: cargo test --release ${{ matrix.args }}
              working-directory: ./src/core

            - name: publish release
              if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/next')
              uses: tauri-apps/tauri-action@v0.5
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: v__VERSION__
                  releaseName: "__VERSION__"
                  releaseBody: "."
                  releaseDraft: false
                  prerelease: ${{ github.ref != 'refs/heads/main' }}
                  projectPath: ./src/core
                  args: ${{ matrix.args }}
