permissions:
    contents: read

on:
    push:
        branches:
            - main
    pull_request:

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

name: test
jobs:
    test:
        runs-on: ${{ matrix.os }}
        name: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [macos-latest, windows-latest, ubuntu-latest]
        steps:
            - name: Checkout codebase
              uses: actions/checkout@v4
              with:
                  submodules: true

            ### Install languages ###
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "yarn"

            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: llvm-tools-preview

            ### Install language dependencies ###
            - name: Setup Yarn
              run: npm install --global yarn

            - name: Setup Rust development tools
              uses: taiki-e/install-action@cargo-llvm-cov

            - name: Setup Rust dependencies
              run: |
                  chmod +x ./scripts/install-rust-dependencies.sh
                  ./scripts/install-rust-dependencies.sh

            ### Apply cache ###
            - name: Generate Cargo.lock
              run: cargo generate-lockfile
              working-directory: ./src/packager

            - name: Cache Rust dependencies
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: "./src/packager -> target"

            - name: Configure Rust compiler cache
              run: |
                  echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
                  echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV

            - name: Cache Rust compiler
              uses: mozilla-actions/sccache-action@v0.0.4

            ### Build and test ###
            - name: Setup Node dependencies
              run: yarn install --frozen-lockfile

            - name: Test Node projects
              run: yarn run test

            - name: Build ui
              run: yarn run build
              working-directory: ./src/ui

            - name: Test Rust project
              run: cargo test
              working-directory: ./src/packager

    tag:
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout codebase
              uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "yarn"

            - name: Setup dependencies
              run: yarn install --frozen-lockfile

            ### If this was a direct push to main, without a pull request, perform a patch bump ###
            - name: Perform patch bump
              run: yarn tag:version patch
