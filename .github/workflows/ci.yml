name: ci

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: check
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      # matrix:
      #   platform: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Setup Nix cache
      uses: DeterminateSystems/magic-nix-cache-action@main
      
    - name: Run flake checks
      uses: DeterminateSystems/flake-checker-action@main

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          core/target
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ runner.os }}-cargo-${{ hashFiles('core/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache frontend dependencies
      uses: actions/cache@v4
      with:
        path: |
          frontend/node_modules
          frontend/.svelte-kit
          ~/.bun/install/cache
        key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-frontend-

    - name: Install nix dependencies
      run: nix develop --command true

    - name: Run checks
      run: nix develop --command just check

    # - name: Build Tauri app
    #   run: nix develop --command just build
